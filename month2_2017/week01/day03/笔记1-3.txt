
知识点:

● 默认事件(阻止默认事件)

● 事件流与事件冒泡

● 事件监听(addEventListener)

● 事件委派(delegate)

================================================================

默认事件

默认事件是html元素默认的行为，比如：

a标签，点击后有跳转链接行为；

form表单的onsubmit事件有默认提交表单行为；

reset类型的input有重置表单行为


阻止默认事件：

return false；

适用于在HTML事件属性 和  DOM0级绑定事件

例：

<a href="http://www.baidu.com" onclick="return false">百度</a>  //在标签事件上直接 return false

oDiv.onclick=function(){  return false  }   //DOM0级绑定事件


----------------------------------------------------------------------------------

事件流

当页面内触发一个事件时，每个层次的 DOM 元素都有机会来处理这个事件

Netscape	事件捕获流（最外层逐级向内传播）

IE		事件冒泡流（内层向外层传播）

W3C 将二者进行了综合，将事件分为三个阶段， 捕获→目标→冒泡


事件冒泡

在一个对象上触发某类事件（比如单击onclick事件）

这个事件会向这个对象的父级对象传播，从里到外

父级对象所有同类事件都将被激活

直到到达了对象层次的最顶层，即document对象


阻止事件冒泡:

ev.cancelBubble=true; //通用


★注意:

focus  blur  change  scroll  submit 没有冒泡


onclick 会冒泡 onmousedown onmouseup事件  要分别进行阻止

onkeypress 会冒泡 onkeydown onkeyup事件


-------------------------------------------------------------------


操作DOM元素

创建元素: createElement

删除元素: oDiv.removeChild（ 要删除对象 ）

插入元素: oDiv.appendChild（ 对象 ）

替换元素: oDiv.replaceChild（ 替换对象，被替换对象 ）

前部插入: oDiv.insertBefore（ 对象，目标对象 ）


★注意：

appendChild  replaceChild  insertBefore 都具有移动对象的功能

-------------------------------------------------------------------------------

事件监听（DOM2级事件）

可以为一个元素，同时绑定多个事件

obj.addEventListener(事件，回调函数，冒泡/捕获) ; 

例：
btn.addEventListener("click",function(ev){ //ev 事件对象

	alert(123);

},false)   //false 冒泡阶段


//ie8以下

btn.attachEvent("onclick",function(){
	
	alert(123)

})；

★注意:

事件监听只能通过JS方式绑定在DOM对象上,不能通过标签事件绑定(标签上只有onclick等原始事件)


阻止默认事件（DOM2级事件）:

通过事件监听绑定的事件,不能用return false阻止默认事件,必须通过ev事件对象来阻止:

ev.preventDefault();//阻止默认事件 W3C


阻止冒泡:

ev.cancelBubble=true; //通用
ev.stopPropagation() //W3C

-----------------------------------------------------------------------

事件委派(delegate)

将事件绑定在父级上

利用事件冒泡原理,通过判断事件的“目标元素”来触发父级上绑定的事件

ev.target；

作用：

1、不用分别为子元素绑定事件

2、为未知元素绑定事件

